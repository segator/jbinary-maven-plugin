version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp/workspace/project
    steps:
      - checkout
      - restore_cache:
          keys: 
            - maven-dependencies-{{ checksum "pom.xml" }}
            - maven-dependencies-
          
      - run:  mvn -B -s .circleci/settings.xml clean compile
      - save_cache:
          key: maven-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - project


  test:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp/workspace/project
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: mvn -B -s .circleci/settings.xml test
      
  deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp/workspace/project
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure Environment
          command: |
            mkdir -p ~/.gnupg
            openssl enc -aes-256-cbc -d -in ${CIRCLE_WORKING_DIRECTORY}/.circleci/secring.gpg.enc \
            -out ~/.gnupg/.gnupg/secring.gpg -pass pass:${GPG_PASSPHRASE}
            openssl enc -aes-256-cbc -d -in ${CIRCLE_WORKING_DIRECTORY}/.circleci/pubring.gpg.enc \
            -out ~/.gnupg/.gnupg/pubring.gpg -pass pass:${GPG_PASSPHRASE}

      - run:
          name: Deploy
          command: mvn -B -s .circleci/settings.xml -DskipTests -Dgpg.passphrase=${GPG_PASSPHRASE} deploy -P ContinuousIntegration

  release:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: /tmp/workspace/project
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure Environment
          command: |
            mkdir ~/.gnupg
            mkdir ~/.ssh
            openssl enc -aes-256-cbc -d -in ${CIRCLE_WORKING_DIRECTORY}/.circleci/secring.gpg.enc \
            -out ~/.gnupg/secring.gpg -pass pass:${GPG_PASSPHRASE}
            openssl enc -aes-256-cbc -d -in ${CIRCLE_WORKING_DIRECTORY}/.circleci/pubring.gpg.enc \
            -out ~/.gnupg/.gnupg/pubring.gpg -pass pass:${GPG_PASSPHRASE}
            git config --global user.email "$GIT_USER_EMAIL"
            git config --global user.name "$GIT_USER_NAME"            
            ssh-keyscan {{ github.com }} >> ~/.ssh/config
      - run:
          name: Prepare release
          #command: mvn -B -s .circleci/settings.xml -DskipTests -Dtag=${MVN_TAG} release:prepare -DreleaseVersion=${MVN_RELEASE_VERSION} \
          #         -DdevelopmentVersion=${MVN_DEVELOPMENT_VERSION} -P ContinuousIntegration    
          command: mvn -B -s .circleci/settings.xml -DskipTests -Dproject.scm.id=github -Darguments=-Dgpg.passphrase=${GPG_PASSPHRASE} release:prepare -P ContinuousIntegration
      - run:
          name: Perform release
          command: mvn -B -s .circleci/settings.xml release:perform
          

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
      - release:
          requires:
            - test
          filters:
            branches:
              only: /release\/\d.\d.x$/

        